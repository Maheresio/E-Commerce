# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
avoid_print: true
prefer_const_constructors: true
prefer_const_literals_to_create_immutables: true
avoid_unnecessary_containers: true
use_key_in_widget_constructors: true
prefer_final_fields: true
avoid_redundant_argument_values: true
prefer_typing_uninitialized_variables: true
avoid_setters_without_getters: true
prefer_expression_function_bodies: true
avoid_classes_with_only_static_members: true
always_put_required_named_parameters_first: true
annotate_overrides: true
avoid_returning_null: true
avoid_positional_boolean_parameters: true
prefer_interpolation_to_compose_strings: true
avoid_redundant_async: true
avoid_function_literals_in_foreach_calls: true
avoid_init_to_null: true
prefer_is_empty: true
prefer_is_not_empty: true
avoid_null_checks_in_equality_operators: true
avoid_renaming_method_parameters: true
avoid_slow_async_io: true
avoid_unnecessary_setstate: true
prefer_final_in_for_each: true
prefer_iterable_whereType: true
avoid_unnecessary_else: true
avoid_unnecessary_type_assertions: true
avoid_void_async: true
prefer_null_aware_operators: true
prefer_const_declarations: true
prefer_relative_imports: true
avoid_private_typedef_functions: true